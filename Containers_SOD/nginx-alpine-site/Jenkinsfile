pipeline{

    agent any

    environment{
        IMAGE_NAME = "school_of_devops-nginx"
        IMAGE_TAG = "jenkins-${env.BUILD_ID}"
        HOST_PORT    = "80"
        CONTAINER_PORT = "80"
        CONTAINER_NAME = "schoolofdevops-jenkins-${env.BUILD_ID}"
        SITE_HOST    = "www.schoolofdevops.ro"
        SITE_URL     = "http://127.0.0.1"
    }
    stages{
        stage("Build Image"){
            steps{
                script {
                    docker.build("${IMAGE_NAME}:${IMAGE_TAG}", "-f Containers_SOD/nginx-alpine-site/Dockerfile Containers_SOD/nginx-alpine-site")
                    sh "docker images | grep ${IMAGE_NAME}"
                }
            }
        }
        stage("Run Container") {
            steps {
                script {
                    sh """
                        # Remove container with the same name if it exists (running or stopped)
                        if docker ps -a --format '{{.Names}}' | grep -w '^${CONTAINER_NAME}$' >/dev/null 2>&1; then
                        docker rm -f ${CONTAINER_NAME} || true
                        fi

                        # Free the host port if another container is using it
                        INUSE=\$(docker ps -q --filter "publish=${HOST_PORT}")
                        if [ -n "\$INUSE" ]; then
                        echo "Port ${HOST_PORT} in use by container(s): \$INUSE â€” stopping them"
                        docker rm -f \$INUSE || true
                        fi

                        # Run fresh container
                        docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${IMAGE_NAME}:${IMAGE_TAG}
                        docker ps | grep ${CONTAINER_NAME}
                    """
                }
            }
        }
        stage('Smoke Test') {
        steps {
            script {
            retry(5) {
                sleep 2
                sh """
                docker exec ${CONTAINER_NAME} sh -c "apk add --no-cache curl >/dev/null 2>&1 || true; \
                    curl -s -o /dev/null -w '%{http_code}' -H 'Host: ${SITE_HOST}' http://127.0.0.1:80" | grep 200
                """
                }
            }
        }
    }
}
}
